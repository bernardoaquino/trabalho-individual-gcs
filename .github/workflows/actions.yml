name: Github CI
on:
  # Configura servidor de CI para executar o pipeline de tarefas abaixo (jobs) quando
  # um push ou pull request for realizado tendo como alvo a branch main
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  pipeline:
    runs-on: ubuntu-latest # Os comandos serão executados em um sistema operacional Linux

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2 # Faz o checkout do código recebido

      - name: Instalando Python
        uses: actions/setup-python@v4

      - name: Instalando Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.2
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: ~/my-custom-path
          installer-parallel: true

      - name: Gerando Documentação - Doxygen
        uses: mattnotmitt/doxygen-action@v1.9.5
        with:
          working-directory: "."
          doxyfile-path: "./doxygen/Doxyfile"

      - name: Gerando Documentação - Doxygen
        run: |
          sudo apt-get install python3-sphinx 
          sphinx-apidoc -o sphinx/ src/
          cd sphinx
          make html

      - name: Testes Unitários
        run: |
          pip install pytest
          pytest tests

      - name: Buildando aplicação
        run: poetry build

      - name: Buildando containers
        run: docker-compose -f "docker-compose.yml" up -d --build

      - name: Stop containers
        if: always()
        run: docker-compose -f "docker-compose.yml" down
